undefined
所以這個作業其實是不只是程式作業他應該也跟你們之前的程式作業會發現還蠻不同的好那這個程式的這個作業部分的這個分數啊還有這個去評量的話就是基本上當然第一個是correctness所以如何都不會跑這當然跑出來結果不對當然就不用講當然就是有問題大家要去繼續debug把它修

正第二個就是會有demo所以我們會有助教不只是你要去解釋你的程式助教員會去問你問題就是你是怎麼去設計的怎麼去實作的因為你會發現其實這些作業是有一定的彈性的你可以去有很多不同的寫法甚至於我們會問的問題甚至於是到什麼程度就是說或許你在任何一個檔案都可以去宣告一個變數

但是你宣告的地方如果不恰當的話主教可能也會提出來問一下或是告訴你一下因為畢竟你可以想像這是一個系統並不是說程式會動就好很多時候你放的位置它每個檔案有它的目的對不對所以你寫的地方不對就算最後結果是有的不代表你有正確的概念跟符合它的設計的理念在裡頭

所以這些其實當然主教都會盡量的根據以往的經驗累積等等去告訴各位不過就自己寫的時候也要注意這一點不是只會動就好你要去稍微想一下你對於這整個作業系統的概念它整個層次設計概念的角度來講你這樣子去實作的方式是不是適合的所以要注意留意一下好最後就report

那re-port其實不會這樣就解釋你怎麼實作的啦所以就是稍微描述一下讓助教在demo前可能就稍微已經了解你的實作的方式所以而不是當場才在那邊看你的程式嘛那當然你也可以這也可以用來輔助你就是你自己描述了一遍所以你可能就按照裡面的內容解釋給助教聽你的實作的方式是什麼

那比較重要就是剛剛提醒的就是可以看見因為有兩個人嘛所以要稍微註明解釋一下到底誰負責哪一塊這樣才會知道你們是不是兩個人都有contribution在裡頭是要分擔的而不是也很不建議的有些case我知道兩個嘛那大家就輪流你負責作業一跟三我負責二跟四不是沒有啦我知道很多也是這樣這非常不建議

像刚才说的不是說你每個人都要寫到層次嘛一個人负责trace另外一個人负责implement這也OK啊所以說但是你不要說这个就丢給你的同伴然后就这样子了自己做自己的這就很不好因为代表另外一半的層次作業你完全没學到所以這也是不行的好

這很基本的啦這個不需要刻意這個大家應該要非常當作沒看見就是不要持交就對了所以我們都很充足的時間才對自己分配時間是大學最重要要這個會的基本技能之一所以就是不要持交人的持交的話我們當然就只好做這個著重的去斟酌去扣一些分數那這是很不建議因為都寫好了嘛那還被扣分這太不值得了，所以千萬不要這個

去持交，那當然更不要就是去抄襲等等我們助教都還蠻有經驗的，都是用一些Tool比對你們的程式嘛等等那Demo的時候也會問你們問題所以你們其實是看得出來的真的其實是很明顯尤其是你真的都沒有自己做的就算你教出來會動其實看得出來是不是你做的所以千萬不要這樣子，那也

可以討論嘛對不對所以我們說過你可以在這個Foreign上討論，但是就是不要做抄襲的動作啦好那最後這個當然啦，就是其實我們非常歡迎同學就在上課的時候就隨時可以打斷我然後就問問題盡量我會的，我當然就盡量回答或者是解釋不夠清楚我們就再解釋一遍所以這個當然是非常歡迎大家就不需要這個等就是上課時候有問題

就盡量的舉手就發問沒問題，但是當然就是不要自己在下面竊竊私語啊接電話這些會影響到你同學學習的那當然就不好了所以這很基本的大家當然我想都知道好終於到最後了，所以對於這堂課的基本的這個內容大家應該知道了，那到底要學什麼咧，這位系統這麼的重要當然東西非常非常的

多那本書那麼厚也不是假的不是說後面都是什麼reference或是一些很大的圖片就這樣子都是紮實的內容，所以你可以看見它一共有八個part不是chapter是part，每個part裡面還有兩三個章節所以會非常的多，那這堂課我們會Cover的部分呢，其實只有一半而已就是到了第五個Part那當然原因很明顯就是我

們說的作業系統或是說電腦的組成的三個最重要的要素不可或缺的要素是什麼？ CPU就是Process、Memory對不對還有Storage System或是File System就是你的檔案對不對。所以拿到一個電腦稱之為這個電腦的話一定有這三個Part，所以你可以看見我們前面的這些就是在講Process、Memory還有Storage當然還有Overview，因為這整個系統設計的概念我們剛剛說的System Code是什麼會有一個Part在介紹所以其實我們也就Cover這些最基礎的，但這些就有好多章節在裡頭了

那後面呢，大家當然可以有興趣的，可以自己看一下就譬如說protection security對不對這個電腦我們都知道很怕中毒或者是被人家入侵這個尤其這個議題是越來越重要，你可以這樣講對不对，因為實在太方便到時候網路這些都可以連到電腦裡頭，這個跟當初一開始電腦出現的環境是完全不同的所以security這邊其實非常重要也是屬於系統的一部分，

因為你如果把系統就當成一個家，你沒有security人家可以隨便break in你的家的話這當然一定不是安全好的一個系統，所以當然也是屬於系統的一部分，但是當然我們這堂課就沒有辦法cover到這邊了。有興趣的未來的研究所，這都有相關的課這是一個研究的領域本身就是一個領域。再來還有分散式系統對不對，所以

就一樣早期的時候電腦又昂貴然後這個連接性網路這邊不是很發達所以可能各自用各自的電腦。但現在不是這樣。現在出了問題越來越大。那最近大家一定也聽過嘛什麼雲端計算對不對？打巨量資料這些新的科技或是什麼IoT有沒有這個大家可能有興趣有接觸到的可能有稍微聽過這些名詞

結果言之所有事情都不是一台電腦可以做得出來的一定都是把所有電腦全部連在一起之後然後一起去管理變成像是一台電腦一樣去做事情這就是分散式系統像是分散在各地的電腦這當然也是非常熱門的東西。最後當然有些special purpose就像一些我們知道控制現在什麼東西都用電腦來控制車子核電廠

那個一些武器啊太空梭等等全部都是電腦在裡頭所以這些電腦當然不會跟你一般我們在那邊玩的手機用手機就那個電池就爆掉這種東西這個當然差距很遠。但它還是一個系統它還是要有OS所以它的考量設計等等你會發現完全不同所以就是這些special purpose那它就有它特殊的議題在裡頭那當然也是一些很重要的東西。

但這部分我們上課當然就沒辦法講那我們等一下也就是我們的第一個Chapter 0不是 Chapter 1。 Chapter 0會幫大家先講一下，電腦就是在OS這邊的演進還有，就是會簡單地提一下，這些基本的概念跟東西，所以只是一個Overview而已，那有興趣的同學當然大家就可以再進去看了，但這部分畢竟不是核心嘛，所以就只是一個概念而已。基本上是未來大家在大四啊選修課啊等等，就可以

再進一步的去了解好。那這幾個part我簡單地先給大家知道一下就好。 Overview introduction有講跟沒講一樣，introduction，但每一個book都有第一個introduction，所以會簡單介紹一下，作業系統的角色到底是什麼？那尤其在這個System Structure裡面，最重要的東西是什麼呢？就是System Code各位的第一個作業System Code到底是什麼？它的定義？它的運作的原理非常非常重要，所以也有一個作業在那邊，讓大家去實際的去implement第二個Part Process

所以可以看到這邊基本上會分成的一個，就是怎麼去schedule這個process，因為我們都知道電腦上可以run的process現在電腦上面run都是幾千個幾百個對不對？看你要launch多少的問題而已其實可以非常非常多的這個程式，同時run在電computer上但電腦有幾個CPU再厲害的也不過就十幾個五十幾個對不對也就是那樣的數字

所以為什麼可以讓這麼多的程式在這麼少的計算的這些硬體上呢就是因為有作業系統的存在。那它的角色最重要就是scheduling分配資源到底現在該誰來執行。所以這邊會有這個process scheduling會是很重要當然什麼是process等等這邊會定義會介紹一下那所以同樣的可以看見這裡會有一個作業3大家會去implement scheduling algorithm

就會知道它怎麼運作至少在NACHOS這個作業系統上它真的就可以用不同的方式去做程式的排程你就可以看到什麼時候哪一個程式開始執行什麼時候它結束結束的順序是什麼這全是作業系統在控制的。第二個部分就是這些Process跟Project之間其實它們不只是要去Share這個CPU執行的Cycle它還要去Share很多的資源所以甚至有溝通

所以雷這個部分就來介紹當他們在有這個去同時使用相同的計算資源或在溝通的時候會遇到一個非常非常討厭的問題叫做Synchronization 同步化。那這個章節咧是整本作業系統裡面通常是最可能大家會覺得是最困難的部分因為很多真的是概念概念而已但是這個有一點接近像Agris一樣他要更嚴謹所以不是只是大概知道就好你要真的make sure

他們不會出問題所以這個章節到時候大家要特別的留意通常是比較複雜一點的你要設計同步化的一些policy去make sure它的正確性所以大家要注意的synchronization是下半部課程的時候最重要的部分就在synchronization這一塊這當然就沒有作業因為你去寫程式也不一定能夠證實證明它的正確性因

為可能性太多了你那只是當下那個結果而已那但是scheduling就會有一個層次好最後兩個part memory跟storage那所以memory的話呢就會是上半部的時候最複雜的最多這個內容的部分就在memory的管理了那我們到歸去講那大家當然也會看見就會有一個這個作業在那邊去做Memory的管理那Storage這邊的話相對大家會比較容易的去想像因為用電腦大家都

在存取檔案對不對電腦在那就是在那邊存檔案看裡面的內容所以你都在操作那些檔案系統的指令所以你一定會比較的熟悉比較能夠連接但是它也相對的比較的雜亂一點都就會發現我們都只會Touch到一點點一點點就是很基本但是很多為什麼因為儲存還有在做IO就是Input Output

這跟變化最大的就是像我們知道以前也沒有觸控式螢幕現在大家都用觸控式螢幕這就是新的一個IO Device所以其實它是比較相對比較雜亂的所以看到這邊有四個章節好像很多但每一個其實講的內容並不是那麼的多那也就会稍微比较杂乱一点但是只是让大家稍微都各方面有一个

基本的了解nn档案系统会特别会请大家再写一个程式去决定我一个档案的内容到底放在硬碟的什么位置所以是把使用者的程式的东西放到physical的device上的一个过程好 最後一頁了最後我們整個上課的agenda請大家留意一下我們有對調chapter我們並不是實版版的按照這个課本裡的第一章上到最後一章因為你會發現我們為了要配合我們的程式MP的部分必須要先implement memory的部分你能夠implement完memory之後

你才有辦法run很多個層次在這個作業系統上面那你能夠run了之後才有所謂的scheduling的部分對不對所以其實是要memory先去implement再去implement schedulingn所以你會發現我們上課的先講完基本的前面的三章知道了process的基本運作原理之後我們會先跳到第八跟第九章就是memory管理的部分讓大家可以同時就去寫

Memory的这个程式的部分也就是METER N之前我们刚才说的Memory是最主要的一个章节，那 METERN之后呢就会开始进到这个Process Scheduling的Operation还有Synchronization，然后就后面的IO系统。最后当然就是Exam那这样说的，我们这两Exam其实并不会重叠啦，所以基本上大家就是先Focus在前面的部分，Final就是Focus在后面的课程的部分好，谢谢大家。.