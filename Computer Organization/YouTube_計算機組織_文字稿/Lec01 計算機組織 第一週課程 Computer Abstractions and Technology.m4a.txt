undefined
我們這門課是這個資工系的這個計算機組織，我是李毅郎那。我們這門課的先修課是Digital System，所以如果同學沒有修過這門課的話，最好是不要跳過這門課來選這個計算機組織，那因為其實際上都會有同學來問我這件事情尤其是就是外系要選那個好像是修輔系之類的，他們有的就是因為時間衝到沒有修這門課就直接來修計算機組織，那這樣子會非常的

辛苦，因為這門課當然不是全部的內容都會背上這個數位系統，但是它有幾個重要的單元，它是假設同學已經了解這個數位系統，它的這個內容，所以我們是假設同學了解這個數位系統的內容然後來做一些這個architecture level的一個討論。所以如果同學沒有修過這門課的話會很辛苦當然同學如果有決心說要這門課修這門課然後順便自己溫習這門課的內容也是可以以前曾經有一位很用功的同學，他就是這樣子，那他就是都是同學就是

同時之間自己看這本書然後又聽這門課然後這門課覺得有問題的趕快再到這本書上面去找他的這個解答，但是會很辛苦就是了，所以記得這個先修課是這門課我們的這個test book就是這一本David Patterson這個我們已經用非常久了這一本課本，他最近一直在改版它從以前的這個課本的內容，它是講這個MIPS，在以前我們在講MIPS的時候同學大家都會來問說，那我們

為什麼不上這個就是這個Intel Intel 的這個X86 的它的這個instruction set為什麼要上這個MIPS？現在有同學會問說，我們為什麼不上這個ARM？為什麼要上這個MIPS？因為大家都知道，說現在這個最熱的是 ARM 並不是 MIPS。其實，不管是 ARM 或者是 MIPS，它們都是源自於大學的一個 Project。它們的 Project 在很久以前，它們就是一個 RISC 的一個 CPU 的一個 Project。當然，現在兩個它們在 Industry 上面的 Application，

其實大概他們的target 都是一樣。但是當然，現在生意做得比較好的是這個ARM。 Anyway 就是說，我們在這門課本裡面，我們是based on這個它前面有一些 ARM有一些 MIPS，那我們現在其實還是follow 這個MIPS的version來做一個探討同學其實只要了解這個MIPS，它的這個構造然後他了解說整個 CPU的基本的原理。其實你再去讀ARM 的這個spec，

其實都是很容易入手就好像說，我相信同學學會了這個CC++那你再去看其他的 Programming Language應該不會覺得很難應該就是看它的一些 Spec大概就可以知道怎麼 Transfer到另外一邊。其實，在課本裡面，他有做一個很妙的P V他說其實就好像說我們在學這個要了解一輛汽車它的構造的時候那我們知道說我們到底要學

Volvo還是Mercedes-Benz還是BMW還是Lestrian到底要學哪一種呢其實都一樣因為汽車的構造基本上大同小異它並沒有什麼不一樣的地方當然比較detail的一定是有差異，但是我們最主要是在這個principle它的一些architecture還有它的一些detail的一些運作的內容這些基本上都是共通的Reference的話。 同學有興趣可以去找一下圖書

館有沒有這本書這本書其實它是用另外一種不同的觀點來寫這門課，它主要就是說Computer Systems它是以Programmer的觀點來看這個Computer System，因為我們知道說Computer System不是硬體 也不是軟體，它是包含了軟硬體。我們在這門課當然不會很完整的介紹軟硬體的關係，但是我們會讓同學就是說以前不知道說軟體跟硬

體之間他們的關係到底是什麼樣然後硬體如何影響軟體然後軟體如何來需要硬體的搭配。在這門課裡面，我們會有一些基本的介紹尤其是如果說同學對以後想要走系統就是Computer System或者是Embedded System 嵌入式系統。如果同學對這兩個領域有興趣以後希望就業或者是研究是朝這兩個領域的話，這

門課非常非常的重要。它算是一個很重要在硬體方面的一個基礎，所以同學應該要多花一點時間在這門課上面來了解。至於如果說對電腦系統還有嵌入式沒有興趣的同學，同學下一堂課就不來了之後反正想說及格，就好讓同學了解一下。就是說，其實現在我們整個業界的競爭是非常非常的激烈。 we know say我們資訊工程領域最基本的就是什麼，我們都知道說我們要會寫程式，

相信同學應該裡面很多都是程式高手中的高手。實際上，如果大家有上網去做一些ACM的題目或者是參加一些像是他們網路上都有一些程式的一些解題或者是競賽。大家都知道說，其實會寫程式的高手多得非常的多尤其是你只要去一個國家人口數目很多的裡面去找城市高手有更多你就把它假設說它是一個固定的比例然後乘一個人口的總數大家就可以

知道說這個國家有多少的城市高手會寫城市的人這麼多。 we跟他們有什麼difference？其實在這個年代裡面當然我不一定保證說同學以後在研究或者是就業上面你們現在修的每一門課都一定會用得到。但是如果說同學在軟體跟硬體上面的背景更合理的話，那只能夠告訴同學說你以後你在職

場上面或者是研究領域上面的發展它的這個廣度是越廣。你不會說局限於說我只會軟體 我只會硬體其他什麼都不懂。 you如果說我專精是軟體 AIR Wizard或者是 specific 某一個 area實際上它也是在做 algorithm 跟這個 software 卻其實你對硬體的這個它的趨勢然後它為什麼會有這樣子的趨勢有比別人更深了解的話其實你在市場的預測或者是以後的科技的這個 market 的走向你會比別人更 sensitive更能夠掌握這一方面

所以其實我們在這門課的第一章其實我們就會讓同學多了解一下跟這門課比較沒有關係的硬體方面的一些背景在我們第一章裡面會跟同學介紹所以在這裡我們就跟同學討論到就是讓同學了解說Testbook 还有 Reference 這個同學Testbook請尊重智慧擦眼權這個一定要買的接下來我們這邊大概列一

下我們這門課裡面會上到的內容我們的目標呢當然這第一個就是我們要學習說我們要知道說一個computer它裡面有哪些component這個同學在計算機概論裡面應該都已經學過了還有他們之間的關係這個關係其實我們要稍微探討到說這個performance就是我們的一個它的效能到底是看軟體還是看硬體

其實它們這兩個之間都有關係的這個就是我們提到的除了了解它們的關係 component之外我們要了解它的performance 当然我們也要了解它們 software跟hardware之間的interface還有就是我們會透過一個project讓同學從頭到尾設計一個簡單的CPU所以這是基本上我們這門課的同學大概課程結束之後可以掌握到

這三大部分的內容這個hours或多或少會有一些不太一樣所以我們就第一章做一個廣泛的簡介然後第二章我們會介紹instruction如果有修過assembly language的同學就當作一個review就針對assembly的instruction單我相信同學那時候學到的instruction set應該不是MIPS應該是這個X86的instruction set所以我們也會跟同學

介紹一下說MIPS或者是ARM跟這個X86它們之間到底有什麼不一樣接著就很重要的Computer裡面一定有這個數學運算單元然後它的Processor接著就是我們的這個Memory hierarchy然後還有Storage最後一個單元就是Maticode或者是Paraprocessing這方面的內容在這一門課程的評分方面我們有三個考試你也可以說兩次期中考 一次期末考或者是三次考試 三次考試的內容

佔這個總成績的65%我們會有一個20%的project這個project就是同學如果找不到人的話就自己一個人一隊最多只能夠兩隊同學不要來找我說老師我真的是找不到我們只有三個人可不可以三個人一隊三個人一隊就猜輸的他就自己猜成一隊就這樣子最多一隊就有兩位同學我們會有

小考這個小考就是根據以往的經驗就是我們小考都是考一些基本的內容所以同學只要對這個課程內容大概基本觀念了解的話我相信這個小考的分數應該都不錯有小考就可以幫助同學不要在期末考前然後再熬夜再去再去趕這個進度所以這個很重要的就是我們會有這個小考當然如果同學課堂的參與程度很好的話我們都會佐以加分我們課程的行業就是在Ecampus這邊我相信同學應該都已經看到了另外還有就是說

我們這個不管是考試或者是project我們希望同學就是自己做就是考試的時候不要作弊作弊抓到就是一律零分如果是project的話也是一樣希望同學不要抄襲就是要自己寫關於這部分每學期都要跟同學再宣導一下其實我們一開始是讓同學了解說我們為什麼要自己做project課修那麼多然後每一門課的loading都這麼重實在沒有時間所以拿別人的project來看一看

改一改有的同學比較負責任的他可能就說 看一看 看懂以後他知道這個程式的內容他可能會稍微改一下有的人反正他也不看懂它裡面內容是長什麼樣子他就要想辦法要改成讓老師跟助教找不出來說這個是抄襲的，讓同學了解一件事情，這個也是跟同學以後的就業有關係，因為我們

大家坐在這邊以後，不管你是做研究或者是到業界都是為了找一個job自己喜歡的，然後賺一些錢來養家活口。 kita的產業趨勢在以前，這個其實在前幾年好像每年都會有同學來問我這一兩年比較沒有，每一年都有同學來問我說老師， 我們志工系的同學畢業以後到底都到什麼地方去上班，他們都覺得很奇怪說我們好像台灣也沒有什麼很有名的軟體公司或者是像美國有Google 有Microsoft有這麼大的軟體公司，它一間公司裡面的

所需要的人才大概全台灣的志工系學生大概都可以把它吸收起來，但是台灣沒有這樣子的公司，台灣的志工系那麼多畢業學生到底都到哪邊去了當然台灣有很多軟體公司，但是台灣的軟體公司規模都很小，不大台灣的軟體公司，你只要有超過100人其實都已經算是很大的一個公司，當然跟Microsoft他們比起來是非常的

非常的規模非常的小，那在早期呢，在早期其實台灣的志工系人才其實很多都到什麼地方去同學大家都想不到很多志工系的人才大家都到做IC的公司去，即使現在在IC公司裡面還是非常非常多的志工系的同學，他們需求量非常的大越來越大，那同學會覺得奇怪說我寫程式的，我跟做IC又沒關係

怎麼去IC公司因為IC公司他們做IC除了CPU是做給電腦用的之外IC有很多用途它有這個它有這個Video它有這個語音方面的它有Graphics然後它有Network很多不同的這個應用方面或者是手機方面通訊方面其實裡面都有很多的IC裡面很多的IC其實並不是只有一個hardwareIC裡面它需要在

早期裡面在早期的時候IC它需要很多driver它需要很多driver所以以前的硬體IC公司他們會找很多志工系的人才去幫他們寫driver或者是會幫他們去寫一些就是做一些譬如說他要做網路網路的最佳化或者是Graphics這方面最佳化他們的各式各樣的這種應用在他們的IC裡面這樣子的人才非常非常的多所以其實很多資訊的同學都是到IC公司裡面他們不是做IC他們也是做software現在一個產業的趨勢一直在變在早期的時候

雖然有這麼多的資訊的同學在印尼公司裡面可是他們的地位是是比較低的 地位比較低那為什麼說地位比較低呢做同樣的事然後做出來都是讓一顆IC動那為什麼做Software的人他們的地位會比較低因為在早期的時候其實現在也是一樣每一家這個IC Design的公司他們的這個Founder全部都是做IC的幾乎沒有是做軟體的是那種

IC公司的Found er他的Background很少就非常少其實大部分都是做硬體的可想而見他們是做硬體的在早期的這個業界的環境他們也是就是做一顆IC做出來賣就可以賣很多然後就賺錢他們賺錢當然就會看說這個讓公司賺最多錢的這個部分是誰做的都是做Hardware Design的人做的所以自然而然他們的重要性就遠高於Software所以Software的

雖然也是大家也都做得很辛苦但是實際上他們的地位在IC公司裡面算是在下面的所以好像是小媳婦一樣講話都很小聲分紅也分得比別人少可是這個情況其實一直在變現在已經不一樣了這個原質疑就是說我們後面會跟同學提到就是所謂的SOC就是我們現在在看系統的時候我

們在講一個系統我們已經不是在講說這個系統裡面就是IC就是重要的IC實際上它光是IC它不能動它需要很重要的software去搭配IC它整個系統才能夠發揮它完整的效能在幾年前好像是三四年前至少三四年前在我們一個一個IC Design還有Design Automation一個國內最大的conference上面的一個會議就是聯發科大家都知道這家公司聯發科的董事長蔡明介他就是硬要去給一個Keynote他就有跟我們那個會非常的大大概不知道有沒有

到1000人我不知道反正在以前就是全台灣這個大飯店裡面大概只有只有兩家可以容納那麼多人的會議。現場就是在花蓮一家，在墾丁所以以前每年不是在花蓮，就是在墾丁，然後每年都是去這兩個地方去到花蓮都煩都煩死了。那個蔡明介他要說什麼呢？他首先澄清說，因為在以前聯發科要進聯發科，大概一定是台大、 交大、 勤大這三個學校，

然後而且最好是要那個那個什麼書卷獎書卷獎一定進得去。你不是書卷獎還不一定進得去。在早期是這個樣子。那他首先澄清因為那個時候他已經沒有這個優勢要這樣子的這個要求，所以他首先澄清說，大家都覺得說，這個聯發科一定是要這個台大教到清大的同學，然後還要再加上書卷獎才進得去。實際上不然，这其實鼓勵大家都去應徵。那接著呢，

他就開始講說，聯發科的一個轉變，聯發科這家公司的一個轉變，就是在那麼多年前，實際上他就講到說，他們以前在開發這個手機晶片的時候，他們碰到一個很大的問題，他們以前的問題都是在說，他們這個chip什麼時候要deliver什麼時候要tap out，那tap out之後，大概就可以開始準備要賣，但是他們後來發現說，他們在做手機晶片的時候，

他們的這個IC其實很快就可以做完，但是實際上，他們整個系統一直做不好，因為他們的關鍵點就卡在那個，他們的手機這樣的一個系統，實際上，它們已經不是專門就是幾顆IC就可以把它run出來他們。需要一些很重要的一些software去搭配他們一直在發展這個software一直做不起來所以他們到後來乾脆就去印度買一家公司比較快就去印度買一家公司後來

那時候的這個問題才解決所以同學可以發現說這幾年聯發科常常在我們系上爭財對不對常常又有主管在我們系上演講其實以前沒有其實以前你要就是說五六年前以前你要去看看說你去查那個你去查那個talk的history看看七八年前看有沒有聯發科在我們系上演講因為他們大概覺得不太需要我們所以根本懶得過來現在是

每年都會讓我們系上正產因為他們需要很多很多的軟體人才而且他們軟體的engineersoftware engineer他們的人數已經零價已經超過hardware designer這個趨勢不是在聯發科裡面發生而已其實在很多很大的IG design house他們都已經有這種轉變而且他們裡面的一些重要的一些key person比如說他們一些重要的一些

director我們知道說在公司裡面CEO CEO CTO 然後VPVP之後在下面大概就是大概就是各個事業群的一些director那個director他其實是算是最重要的就是可以領導整個group可以做出一個product的一個這個的一個主管其實他們這一方面的 director其實重要的是 software的那些系統很多公司都已經是這個software

的資訊的人才就是已經佔了那些重要的缺他們的重視的程度也越來越重要講了這麼多呢再跟同學講一件事情就是說同學會發現說我們系上越來越重視寫程式的能力 對不對好像在這幾年好像越來越重視其實我在大概八九年前我從業界來回到學校的時候第一年我就發現說奇怪怎麼好像我們系上的這個實作能力好像跟以前差很多怎麼會說跟以前差很多就是我以前不是教大的是隔壁清大但是以前我在業界的時候

就是就是我的team就是我的team member其實他們在這個在實作能力上面就是說能力特別強的比例教大的佔的比例是非常的高是遠高於其他學校所以我以前在公司裡面我說奇怪我帶的這些人好像能力最好的比例比較高的是教大所以我對教大的印象特別好可是來到系上我就奇怪一教發現說怎麼好像抄襲的程度好像還滿嚴重的然後當然裡面還是有很厲害但是感覺就是說

這個Coding的能力好像跟以前比較起來跟我的認知是有一段差距其實那時候好像大家也還不太注重雖然有時候發發牢騷也就算了但是後來好像有業界的跟我們系上的主管反映說奇怪 交代以前都是這個實作能力都是有名的怎麼現在出來的好像程度越來越差都還要在那邊訓練很久才能夠上手，其實不是說我們交代的程度變差應該說台灣整體的程度都變差。我相信我們系上在台灣目前的這個水準還是非常的

還是非常的好，但是整體而言其實一直在下降。就整個台灣，因為為什麼下降呢？因為大家都習慣抄襲大家都喜歡抄襲所以這個問題又來了，這個問題是怎麼樣呢？就是說同學大家都還不了解。說其實現在一個新的潮流趨勢已經形成這個新的潮流趨勢就是software這是一個software的一個趨勢。但是同

學你們準備好了沒有你們要問自己說你們到底準備好了沒有？這個機會給你們但是你們如果沒有準備好的話其實你們就會miss掉這個trend。所以只是要提醒同學就是說這個實作能力很重要。那實作能力當然就是從我們這個除了同學自己的練習之外很重要的就是在你要把握每一門課作

業 Project甚至你們的專題這樣子自己實作的能力才會慢慢的加強。同學千萬不要想說反正我先混過去先可以推真上研究所以後再加強實作能力坦白告訴同學就是當你大學浪費四年你推真上而且還能夠推真上研究所這個實在非常奇怪沒有實作能力也可以推薦上研究所。但是當你推薦

上研究所之後你想要補你的實作能力已經來不及了。我坦白跟同學講你絕對來不及，因為研究所還有其他很多的事情要做。所以你不可能好像大學一樣大學裡面其實自己會有很多時間可以去做你想要做的事情，但是你上研究所其實你那兩年已經來不及至少我在我實驗室裡面看到的

case都是這樣子。你只要是推正上來沒有實作能力的，那個研究所大概都補不起來。所以同學現在才大三而已，所以還有兩年趁現在把握機會就是以前如果沒有把握機會好好練習的話，現在應該要好好把握機會。所以我們就談到這裡讓同學了解說現在的產業的趨勢，這個趨勢其實我們要感謝 Steve Jobs就是 Apple 的創始人，是因為他讓大家了解說 software 的重要當然另外一個很大的趨勢的潮流，就是整個硬體的發展越來越先進

的需求越來越成長這兩個重要讓大家了解說這個software的重要我們在後面會再跟同學來介紹這一方面的內容。我們課程的簡介到這裡，同學有沒有任何的問題，有沒有說評分，同學要建議這個權重未停，要改一下或者是要加什麼，有沒有同學說想要加作業的啊！我以前很注重作業，但是後來就

把它取消掉了，因為抄襲的人實在太多太多了。剛開始抓到抄襲就給零分，但是同學好像還是不死心繼續抄到後來，我想說算了做這種事情沒有意義其實作業是很重要的作業可以讓同學訓練思考的能力，有沒有同學在課程的內容方面有沒有什麼問題沒有我們就開始進入第一章。我們第

一章我們要跟同學介紹這個computer abstraction跟technology其實我們前半段我們會跟同學介紹這個整個跟這個computer organization有相關的這個domain的knowledge還有history還有講一些故事這些故事可能大部分的同學都不知道剛好以前就是有經歷過那個年代所以大家都知道那些故事因為以前就是常常看雜誌你常常看雜誌你就會看到現在產業界發生的事情再以後就會變歷史我們現在看就是說我們的這個computer revolution

其實最主要是來自於就是說在Computer Technology這個Computer Technology實際上就是HardwareSemiconductor的這個Technology這個Technology就是我們所謂的Morse LawMorse Law它是Morse它是Intel的一個Founder它以前它在很久很久以前它就好像196幾還是7幾年它就提出一個觀念 它說這個以後我們半導體它的產業它的

技術的發展它大概是每兩年它就會進步一倍什麼進步一倍呢它所看的觀點是說在單一個晶片裡面到底可以放入多少個電晶體我相信同學修過這個Digital System大概都有聽過Transistor這個名詞即使不是很了解那是什麼東西但是大家都知道什麼是transistor所以它是以在一個single chip裡面可以contain多

少個transistors來衡量它是每兩年就會double。同學會覺得很奇怪說那我一個single chip裡面的number of transistors double是代表什麼意思呢？實它就代表說我可以做越多越複雜的電路越複雜的電路就表示它可以執行的功能就越來越多。我簡單舉一個例子就是說在早期我們的CPU裡面沒有floating point processing unit它沒有floating point processing unit它只有integer就是整數的處理單元它沒有浮點 運算單元。同學說怎麼可能呢？這個computer它一定會用到floating point

所以在早期它是另外再做一顆Chip那顆Chip它就是專門處理這個Floating Point所以它叫Floating Point Processor。所以，如果說你要買比較High-end的電腦你的主機板上面一定會有兩顆CPU，一顆是真正的CPU，另外一顆叫Code Processor，另外那一顆就是叫Floating Point Processor這樣子跟我們現在的CPU裡面都會有一個Floating Point Unit有什么不一樣？其實它的差別同學可以想像一下就是說

我們在買電腦的時候我們都知道說我們會注意說這個CPU，它的calculate是多少對不對？你買2G的calculate跟4G的calculate一定是4G的calculate比2G的calculate的CPU還要貴非常多，4G的calculate我們會D4就會認得說它一定是跑得比較快。實際上一個電腦，它跑得多快呢它是有什麼決定？其實我們可以很簡單的看就是說我們知道

說這個chip裡面，它就是很多訊號很多電子在那邊跑來跑去。我們可以用一個很簡單的來看說它是從左邊這一點跑到右邊這一點。如果說一顆2GHz的2GHz的這個CPU，它可能從這一點跑到這一點，它可能需要一個Ns如果是4GHz的，它可能從這一點跑到這一點，它可能就只需要0。 5個Ns所以它的速度比較快速度比較快就是什麼呢，就是我們選下去要叫它執行這個動作的時候，它給我們的反應的時間會比較少，它可能少一半

我們自己按下去要等五秒，我們這台新電腦按下去只要等兩秒，它就出來，所以這個就是它的速度會比較快，這個硬體的設計，就是說這個訊號，它在一個晶片裡面，跑的速度是最快，你只要訊號跑到晶片的外面，晶片的外面是什麼，就主機板，你只要從A晶片跑到主機板上面透過主機板的這個線，再跑到B晶片，跑到裡面去，它的速度會慢非常非常的多，它不是慢說一倍兩倍，它搞不好可能會慢一個老者也有可能，所以我們就可以

知道，說以前把這個CPU還有14-point processor放在兩個晶片，它的速度是怎麼樣，是很慢的跟現在來比很慢，因為很多訊號都要透過這個都要透過這個PC Ball，在上面跑， 它要跨過晶片，现在你把它整合在一個晶片裡面，它速度就變快，所以我們說 Mode Slow，我們舉這個例子，就讓同學可以了解，說它是可以產生很多不一樣的效應，那些不一樣的效應，它的功能越來越多 越來越複雜當然就會造成很多的這種不同的application，這些application包含了在我們在汽車上面，有很多IC

還有cell phone還有我們人體的這些基因分析的那些計畫還有我們這邊 World Wide Web還有 Search Engine 這些都是同學說 Search Engine 跟這個東西有什麼關係呢，我相信同學現在應該都知道 Data Center 對不對，同學都知道 Data Center 這個東西，Search Engine 像 GoogleGoogle，實之前有人詬病 Google 說它的耗電量太多了，有人在 Google 上面按一個 Search可能就耗掉多少的電之類的其實它為什麼那麼耗電呢因為它 Google

需要很多的 Server，它需要很多的伺服器放伺服器的 Data Center，它可能都是那個大小可能搞不好都是以什麼足球場那麼大的一個大小來算同學可以想見就是說有那麼多的 Server自然而然它就會耗電然後耗電又會有熱的問題所以它要解決很多問題，這些在以前的硬體的技術沒那麼發達的時候它是做不到的因為它速度變得非常的

慢所以目前就會讓我們的這個computer，它的應用就是在各式各樣的地方，實際上都可以看得到computer的這個蹤影，只是說我們可能不知道說其實裡面也有這個computer，我們比較典型的， 我們知道的這個Computer，就是一個Desktop Computer、Server Computer、Embedded Computer。我們後面會有這個Evolution，讓同學了解說他們之間在Evolution Computer的這一條路上面，他們的變化。我們這個就不用解釋了， 同學都是都有這個 Desktop然後 Server 呢。 Server同學到系計中或者是學校的這個計中裡面去用

類似像 SAN的或者是 IVM的或者是其他 SAN，現在已經不見了，現在變 Oracle，所以這類伺服器的話它是怎麼樣呢它一定Network basedHigh capacityHigh performanceHigh reliability為什麼會加一個high呢我跟同學簡單描述一下就是說同學可以回去試著就今天開始就不要關機看看你的這個Desktop什麼時候會掛掉我們做一個試驗也可以全班都開著然後做一個平均的統計這個統計值比較客觀就看看什麼時候會掛掉過年的時候

可以關掉沒關係那Server呢它是不關機的OS是不關機的即使過年的時候也是不關機以前過年偶爾會關機因為想讓大家回去過年可是現在很多國際競賽他們的截稿日期都剛好在過年以後所以我們現在過年的時候同學都要在那邊拼命code and debug所以現在過年也不能關機簡單講就是它365天天天開機就跟這個7-11一樣它會不會crash它不會crash所以這個是它非常的high

Reliability所以其實它的Server它的架構跟我們的Desktop沒有什麼特別只是說它的每一個部分的Design都比較High-end所以都是比較可以對於這種散熱方面 效能方面還有就是各式各樣的需求都會比較可以容忍我再舉一個例子就是像Desktop我們同學可以灌這個Linux 對不對關Linux然後上

網以後可以讓很多人login，同學可以試試看把你的Linux上網之後讓同學login/login以後不要在那邊聊天，你們就每個人都去run你的program，每個人都去run你的program，run compiler run program。你們可以測測看說，因為我現在已經很久沒有做這種事情了，所以我不知道現在的Desktop可以容忍多少人我們以前差不多大概只要超過

三個人他就他整個performance就會當得非常厲害，就幾乎就卡在那一邊，那server的話呢，十個人十一個人進來都沒有關係，所以等於說他的performance呢，他不會像Desktop一樣很多人進來他馬上就好像crash掉一樣，他即使要他即使要crash他會非常的從容而優雅，他不會說一下子然後就刮掉，他會performance會degrade非常gracefully，所以這是server，它的效能就是這樣子嵌入式，我們手機那個都可以算式所以這種embedded computer，接著我們就讓同學來看一下

這個這個computer，它的歷史我們就是在看這個歷史的時候，我們把在半導體的發展，我們把它分成兩個主軸，其實這個就跟我們現在在發展的時候，我們現在大家都在用的這些電腦，實際上目前的科技，它們有很多各種不同的可能大家都一直在尋求不同的突破之後新型態的Compute到底會是什麼樣子其實現在還不是很確定，

但是現在有各種不同的科技都在發展我們就是讓同學看到說比較大的那張圖都是當時的主流科技然後左邊比較小的那張圖其實就是台面下那時候正在運浪的科技我們說這個電腦我們在二次世界大戰，它是第一台general purpose的computer，約於1946年是在這個二次大戰的時候它被發展出來，它被發

展出來呢，它就是在這個Pennsylvania University的這個Moore School，是這兩位Inventor他們所發展出來的那個時候，他們那時候沒有就是不是用所謂的電晶體，他是用真空管同學不要問我說真空管是什麼東西，因為那個我也沒看過可能要找歷史博物館比較能夠知道那是什麼東西反正據說是體積比較大的，但是聽說現

在好像還有在做真空管的樣子這個我也不是很清楚然後好像還聽說有一些玩音響的喜歡聽那個用真空管的收音機，還是什麼之類的，好像音質會不太一樣，這個我也不是很清楚 都是聽說的就是他們那時候最主要是做什麼用呢，因為是二戰嘛，所以當然是用來做打戰用的，它是用來算我

們這個大砲，就是說你的仰角要多少度，然後你要打到什麼地方去所以我們會有這個觀測兵會去觀測我們的這個目標然後預測就是說你的方位, 你的距離;然後你這樣去算說你的這個砲大概要調成什麼角度;然後打出去比較可能會打到那個地方;所以它大概就是這樣子。它是80 feet,它的長度80 feet,然後高度8.

5然後它的寬度也差不多是幾個feet大概是這樣子同學可以想見的就是說它的體積還滿龐大的它用了18,000個真空管每秒可以算19,000個加法19,000個加法你要算這個綽綽有餘這個沒有問題所以那個時候的general purpose的computer所以這看起來很像那個科幻小說裡面的那一種就是很高檔的機器第一台這個commercial的computer在美國它就是這個universal automatic computer它是帶著長這個樣子所以看起來這個體積都很龐大

然後這個操作有點看起來都很像科學家然後他最有名的一件事情是什麼呢就是他準確的預測1952年美國總統是會由誰來當選所以那時候大家可能一般的民眾大概沒有想到說電腦居然會預測誰會當選所以這個是很有名的一台電腦在大概的這個年代1947、1952差不多有多少年其實在實驗室裡面發生了一件事情

就是在這個BioLabBioLab大家都知道發明了第一個transistor就是叫Sharkley他們發明了這個1947年他們的電競體就長這個樣子transistor這是第一個transistor那時候大家還不知道說這個有多麼重要的一件事情所以是在這個年代差不多就第一個電競體就出現其實同學大家不知道說Bell Lab現在大家都知道說它是美國的電

信商其實Bell Lab在早期他們是有很大的一個research的一個group他們的研發單位他們做很多基礎的研究比如說像這個也算是基礎研究他們也有在做演算法的他們也有早期做網路所以他們有很多各個領域所以如果你們找比較早期的paper其實很多paper都是從Bell Lab那邊過來的但是後來他們也是為了營運的問題所以要商業化就必須要把那些全部都把它拆解掉有的拆解掉就賣人有的整個就關掉

非常可惜不然以前Bell Lab他們的研究其實做得非常好這個以前我大學的時候在圖書館裡面還看得到這個書不過那個書已經很老很老很老就是都已經很舊的書Systems IBM Systems 360Model 40,50,65, 75同學可以看一下它的Spec那個時候它的電腦都非常大的這個是非常有名的這個IBM它的商業電腦差不多也

在58、64這個時候就是integrated transistor前面是電晶體但是現在它是把電晶體還有電阻跟電容把它整合在一起，這是我們現在IC的一個雛形。 IC是什麼縮寫呢？ IC就是integrated circuit。它把很多這種電路單元全部都把它整合在一起，所以大家可以看到說這個好像在玩那個那個泥土就是那個黏土在那邊咕咕咕很

多東西在那邊黏來黏去，這是他們的，就是在1958年那個時候他們做出來的一個雛形。 1976年Cray-1,Cray是非常有名的這個超級電腦，其實現在很多做這個超級電腦，他們的很多關鍵人物其實很多是從 Cray 那邊出來的，那 Cray 呢！它就是最快的是當時為 scientific applications 的 application 主要是做什麼呢？做 14-point 的 operation，所以你 14-point 要做得很快，那才會怎麼樣

呢才能夠用在 scientific 的 application同學知道的。現在最有名的兩大 CPU 的 vendor，一家是 Intel，一家是 AMD。同學大概不是很清楚這兩家，它們有什麼樣的特色同學都只知道說Intel的比較貴，Intel好像比較好！其實這兩家公司都是很偉大的公司，這兩家公司在早期的時候AMD為什麼一直輸Intel呢？因為當然還有其他的因素，但

是有一個很重要的因素是在早期AMD14-point 的 unit做得不好，他們的14點技術是比Intel還要差，所以在以前，在早期AMD，你只要是做14點的這個運算大家都會輸Intel_AMD很難贏，但現在AMD，他們有很多新的技術其實是從AMD那邊出來就好像Maticor其實也是先從AMD那邊開始在推的。我们後面有機會再跟同學講，那個Intel一貫的這個行銷手法，所以這個是Supercomputer差不多，在這個年代，在1976這個時候，是這個Commercial裡面Market裡面的主流，大概都是這些IBM、IBM的Mainframe的ComputerClay的Supercomputer，但是另外

另外一個極速發展的是什麼呢，就是這邊Intel，在1971年推出4004，同學看到這個規格下巴可能會掉下來說這種東西能用嗎？在當時當然是很先進的CPU的設計，所以同學可以發現說，有兩大主軸，一個是什麼呢，越做越大然後越做越快，其實另外一個檯面下的，它們的一個主軸的一個發展，它們是一直

在縮一直縮一直縮它們要把這個硬體的東西越縮越小，它的主要的來源完全是由於transistor的關係，它才有辦法還有integrated transistor，同學不要覺得說它的螢幕擺反了，它的螢幕就擺這個樣子，它正確的擺法就是擺這個樣子，這個是什麼呢 Xerox好像中文有人翻作是全入還是什麼不是很清楚，這個也是非常有名的公司Xerox。它在早期差不多在這個年代，它成立了一個先進研究室，那個研究室專門在研究有沒有可能是網路、

電腦、然後還有圖形介面的一個整合，就是我們現在大家習以為常的東西，在那時候是沒有這樣子的一個觀念。他們開始在研究，是不是有可能網路 圖形介面 然后電腦，把這些東西都整合在一起。所以這一台，它其實就是Xerox他們的一個先進的研究單位所研發出來的。目前的Desktop，其實最主要都是源自於這一台的靈感，

包括Steve Jobs當初，他也參觀了這間實驗室。他們有看到這個東西，他們對這個就非常有深刻的，就是像那種走在時代尖端的人，他們就會知道說其實他一看到這個東西他就知道趨勢是什麼東西不知道的人他看了他還是不知道說趨勢就是要往這邊走，所以Apple他看到這個之後，他參觀了這個之

後，他們Apple開始去design他們的GUI的OS。所以後來就推出了Apple II、Apple Lisa，那個是在當時是非常非常轟動大家覺得說這個圖形介面用起來非常的炫感覺非常的舒服。所以這個完全是都是inspired從這邊過來的。所以它是一個Bitmap Graphics的Display，它有Mouse 它有LAN它還有什麼呢，它還有一個Window-based user interface這是什麼呢這個在當時是完全沒有的就是What you see is what you get就是我們現在這樣子的一個圖形介面在以前都是沒有所以這是一個很重要的這個是

另外一個彩色的一張圖所以就是當時的這台電腦我們休息一下我們接著繼續來看就是我們前面這邊看到第一台這種實驗型的就是實驗型的比較像現代的Desktop的Computer之後我們就可以看到說這個Steve他們發明的這個首先是Apple I之後是這個Apple IIApple II那時候他們用的這個CPU其實並不是Intel他們是用Motorola 6502 8-bit這個CPU當時這個6502在當時其實非常非常的

popular好像在那個時候的台北的中華商場他們賣很多這種所謂的相容電腦全部都是用6502就是長得像這個樣子我猜 Steve 大概是這一個所以同學可以看到他們去做這個圖形介面的 GUI這個還不是這個時候這個還沒有圖形介面的 GUI它那時候它是這個 Apple Lisa給人家的感覺就非常非常的不一樣所以它永遠都是走在

時代的前面它可以看到別人沒看到的趨勢還有之後更進一步它們都賣得特別貴就是因為比較Fancy即使它的長處不是在它裡面的硬體，它是在它的SoftwareApple永遠以來都是以這個Software在取勝從來不是說它的Hardware比別人多好多好，它都是用Software來贏別人給人家的那種質感就是不一樣這是現在的這

之前的比較然後這個是在比較越接近現在的這個steep jobto這是國外網站抓下來所以這有copyright這不能亂用的有註明它的source這個好像是一個教主就是一個宗教的一個教主底下有很多教徒很多蘋果迷都是這個教徒同學大概不知道Steve Jobs他的這一生其實他真的是就從年輕的時候到現在已經這麼老了大家不知道他的這個歷史從我們把它回去其實這個時候應該算是他年輕的時候最風光的時候因為他那時候April 2

真的是打遍天下無敵手但是雖然它是引領世界潮流但是有時候它就是世界潮流不一定都是一定要跟別人不一樣有時候大眾的需求是什麼呢大眾的需求是要比較這種比較普遍的比較普遍的其實就是後來IBM他們推出來他們推出IBM PCIBM PC沒有像 Apple 那麼的 fancy但是它們的價格就是比較便宜然後它們的規格完全統一然後它們是就是 open 的像 Apple 它是封閉的一個系統那 IBM

它是非常 open你要掛什麼進來都可以它很歡迎所以它的擴充性感覺就比較大那你如果 Apple 它沒有提供的擴充功能你就沒辦法使用你想要有的它沒有提供那就是沒有那PC的話你各式各樣的廠商可以做那種擴充功能就是用那個介面卡以前都是用介面卡就直接插上去又多了什麼樣的功能多了什麼樣的功能都有所以後來IBM PC就輕死就把這個Apple打得潰不成軍它就越賣越差 越賣越差那最後呢 Steve Jobs呢

他就請了一個人來救他們公司 救Apple請了那個人 那個人進來之後他研究了一陣子之後跟董事會提出要救Apple的方法他的方法就是說必須要把Steve Jobs fire掉Apple才有救他的結論就是這樣所以最後Steve Jobs就是被他請來的那一個人給fire掉他請來要請來這個人要來救Apple但是他看完之後

他是說他要走他沒有走Apple就是救不起來所以之後Steve Jobs他出去之後他又開了一家公司叫Nest Computer同學可以回去搜尋一下Nest Computer你要把它跨伏起來不要把它分開你如果是Nest Kong Computer這樣子可能比較找不到你就把它跨伏起來Nest Kong Computer刮斧你應該可以找到現在還有雖然它是幾十年前

的公司現在應該還會有這Steve Jobs他後來就是開了一家Nes computer剛出來Nescomputer推出來的時候也是叫好但是不叫做因為他看得太遠了他的趨勢看得太遠在那台電腦裡面他把這個object-oriented的觀念帶到他的作業系統裡面去然後他也是用網路什麼都是最先進的在當時大家會覺得說這台

電腦真是好棒好棒可是就一般人而言就這麼棒的電腦不知道做什麼用因為沒有那個環境沒有那樣子的application你不知道那台電腦要拿來做什麼用所以那台電腦最後就是叫好不叫做最後又就倒掉那是後來那個Apple他又他又不行了 最後又請 Steve Jobs 又回 Apple 去救 Apple所以他後來才推出 iPhone、iPod、iPhone、iPad所以他的一生就是這樣子起起伏伏同學可以看到說他曾經被 Fire 掉然後趕出他創立的 Apple 公司然後最後又是用

救世主的姿態又回去又把Apple又救起來其實它這輩子裡面最大的競爭對手是誰就是這個PC當初Apple會下來就是因為PC就是被PC打得很慘所以在這個Apple還沒有推出iPodiPhone iPad的時候同學可以去看看這個Macintosh他們的computer他們的站的全世界佔的這個computer的比重非常非常的少

所以純粹就是一群始終的擁護者會用他們的電腦也特別的貴我們如果要來看這個IBM PC的話就一定會牽扯到一個人Bill Gates。 Bill Gates跟這個IBM PC有非常非常重要的關係。他们之間的恩怨情仇我們稍微點一下就好同學有興趣的話可以去看這本書。這本書它把整個裡面有包含電腦開始發展的年代在矽谷他們的那些重要人物之間的恩怨情仇全部在這裡面都可以找得到。那IBM PC呢，它就是IBM剛開始推出這個PC的時候

也是非常的就是銷售非常的好。但是IBM他們可惜沒有看到趨勢潮流什麼趨勢潮流呢就是電腦裡面一定要OS當時早期IBM PC剛開始的時候其實用得最多的是這一套作業系統叫CPM。 CPM現在網路上應該還找得到以那時候口碑最好的CPM。後來因為大家都有在改所以後來IBM他們就想說他們可能有新的機器他們到底要用哪一種DOS呢所以其實那時候曾經有過IBM DOS叫MS-DOS。 MS-DOS就是Microsoft的一個DOS。 MS-DOS是怎麼來的呢

我們不得不承認說Bill Gates也有他的獨到的眼光之處。他已經看到說這個OS是非常非常的重要。那時候Microsoft他們公司裡面沒有任何的OS的product那時候好像是在好像是西雅圖吧我已經不太記得了同學可以去查一下這個。我不是很確定好。像是西雅圖的有一家公司他們因為那時候最紅的是CPM，他

就design了一個OS是for PC用的，然後可能有一些功能跟CPM是蠻類似的，所以這中間他們也是有一些糾葛就是大家都在懷疑說誰抄誰誰抄誰。但是那個人他那個西雅圖那家公司，他們做的這個DOS他的確是他是自己做，即使他有參考這個，他也是從無到有在把它做一個新的。那時候微軟，他就已經

知道說這個東西很重要，他想賣，但是他公司沒有這個東西，他就一手去跟IBM談談，說你們IBM可以用我們的MS-DOS。他們公司什麼東西都沒有，然後Bill Gates又去跟西雅圖那家公司談談，說我們要買你的DOS，就是這樣子。最後微軟就從那家西雅圖那家公司買了他們的DOS回來之後改一改，就是叫MS-DOS改一改

當然是最重要的大部分絕大部分都是原本西雅圖那家公司的東西。當然，後來你越改越多裡面的差異性怎麼樣，這個就不得而知。但是最早的時候微軟的MS-DOS是這樣子來的感覺就是， 那個也很大膽，就是什麼東西都沒有，也敢去跟人家談那最後IBM他就用MS-DOS，他就用這個東西。所以MS-DOS後來就一直發展一直發展然後就主導了整個這個PC的發展，全部都變成要壟斷只要他想要做的東西，那個東西就完全沒有生機。

我舉一個例子好了，在我們以前其實有很多Library有很多公司就是有很多那種小型的公司，這種小型的公司，它的價值是在創意因為這種小型的個人的公司大家都是在比創意所以比創意，比如說我們在寫程式的時候，我們不希望所有東西都是自己寫，就是我們現在都是用我們都是用Class以前不是OO的年代大家都是用Library，Library我們就會分

分別說，你這邊是Graphics的Library，你這邊是Io的Library，什麼樣的Library你會分很多種Library，每一家公司，它的Library都有它的特點都有它的不同的特點，這個大家都在比創意可是微軟，它一旦想要做，它把這些東西全部都提供到它的系統裡面來，以後之後那些公司全部都倒掉了，就全部都不見了，因為人家當然是用

微軟的，不會再去花錢再去買那個雖然那個是比較有創意，但是還是要錢大家最後還是算一算還是免費的比較好其實它不是免費，它是算在你的Windows OS它裡面的費用，所以最後全部都被微軟壟斷這個是在早期的這個softwarePC的這個software一個很可惜的一個現象所以這個 同學找一下 Bill Gates 是哪一位這位嗎 還是這位 當然不會是這位啦，這個比較像 這個看起來比較像關於他們的 Windows

呢 微軟的 Windows這個又跟 Steam JobSteve Jobs他在幾年前，他一直堅持說那個微軟的Windows是源自於他們的Apple的圖形介面化的作業系統，因為Bill Gates微軟他們之前沒有那個東西；他們是微軟去參觀了Appleพวกเข的公司參觀了他們的product之後回去他們的Windows才出現的這個東西，都扯不清反正實際上到底怎麼樣大家也不知

道反正他們那幾個人之間的恩怨情仇是糾葛了幾十年不過現在也應該都沒了，因為Bill Gates已經早就退出然後Steve Jobs大家也知道他前一陣子也宣布退出了，所以這兩個都已經不是檯面上的人物所以大概就是這個樣子其實最 old 是誰呢，最 old 是這個 team，我之前還在業界的時候有一次去矽谷出差的時候剛好有人找反正大家都會找誰的朋友的朋友一起吃飯然後剛好有一個人，他就是 CPM 的 team他們當初如果

好好掌握那個優勢的話，其實 MS-DOS 它應該是沒有機會的，有時候就是你沒有看到那個 chain miss 掉之後就沒有了就很難再起來我們再來看這個 embedded computer，這個就不用看了大家都知道說它的應用就是有這麼多各式各樣的應用我們看到這麼多的應用其實我們要把目前我們等一下會來探討它的Evolution我們要讓同學看一下

現階段比較指標性的Product第一個就是CPU因為我們前面看說這幾十年來它的CPU的發展是主流這個CPU的主流這個是最近看到的但是它還沒有release這個version我不知道它這個version到底是不是最後commercialize的時候這一個version還是它commercialize是比較low-end的它說AMD FX CPU是8個Core然後它的CPU的calculate是8.

428GHz這個是目前就是應該是如果是金氏世界紀錄應該就是它了就是單一CPUcalculate最高的就是這個8. 428GHz這是最快而且據說它不鎖頻它不鎖平 它之後賣的時候它不鎖平就是說你如果可以抄品的話你要怎麼抄你就去抄你只要不要把它抄壞掉就盡量抄我們後面我會跟同學討論說什麼是抄品抄品怎麼玩 其實我沒有在玩那個但是我可以跟同學講一下就是說在 Hardware Design 的觀念上面來看的話那為什麼

他明明說他這個就是8. 4GHz你為什麼可以把它超到9GHz？其實他是有原因的，這個裡面也有一點他們公司在賺錢的一個秘密。其實他本來就可以跑那麼快，但是他之前是賣2GHz。他為什麼現在要一下子就給你賣3GHz當然是同學可以發現每一個新的product出來價格就特別貴，一個新的出來就特別貴它

當然是分幾次出來，它不要一次就出來，但是不是每一個都可以超頻的，那是要它的design要夠好，它才能夠超頻。另外一個這個是mainframe computer，就是IBMIBM，它的長相就是這種mainframe的這個computerMainFrame Computer，它是Z enterprise system，它有96個micro processor，每一個都是5. 2GHz，它每秒可以跑50個billion、 十億，它可以跑50個billion instruction之前曾經是單一processor calculate最快的，但現在已經到8。 4GHz這是Mainframe

這是另外一種type的一種computer的一個進展前面是CPU然後這個是去年的今年我沒有再查說今年最快的電腦是誰去年那時候我查到最快的是叫Roadrunner就是Supercomputer它的Roadrunner現在的這個Roadrunner類似像這種它們的架構都是一樣的它們架構大概都是把很多個比如說可能幾百幾千個這種Quad-Core這種八核六核這種Core的CPU全部把它分散把它Cluster在一起然後再加上GPU之類的所以它們就是用這樣子

它們可以達到這個10的15次方Flops他為什麼要講FLOPS呢因為這一類的computer它最主要的應用就是應用在Scientific computationScientific computation就是浮點運算所以它是什麼縮寫呢它是每秒per second可以執行多少個floating point operation每秒可以執行多少個floating point operation所以這個是可以做這麼多個這速度有多快呢他們形容就是什麼呢

就是六個billion的這個人當然不是小孩子 這是成年人六個billion的人他一天工作24小時然後每天做一年做365天 持續做46年不是share同一台電腦每人都有一台laptop就這樣做了46年他這個roadrunner它同樣的工作只要一天就可以做完所以同學可以想想看它這個有多快這是最快的據

說現在好像日本要做更快的然後美國也要做更快前一陣子好像是大陸是最快的現在日本跟美國又要趕過去提出更快的電腦所以這是給同學看一下目前現在三大發展主軸規格大概是這個樣子這個就是他們的照片同學可以看到這有多少這個很大這個看起來已經有點像什麼呢同學應該記得前面那個196幾年7幾年那個SupercomputerMan-frame Computer大概就類似像這樣的

scale非常的大然後現在這樣子Supercomputer它也是這麼大的它裡面需要很多的network因為它不是把所有的CPU都放在同一個板子所以它是很多板子之間它必須要有這個communication，所以它在maintain的時候，它的scale就這麼大。它裡面有很多的排線，所以這是非常複雜的這個機器，所以我們就用這幾張圖讓同學看一下這個computer的evolution首先，我們可以來看一下說這個是我們

這個早期什麼呢。我們在講這個進化論進化論就是說我們所有的生物，不管你多大的生物都是從那個最小的微生物開始慢慢演化，演化，所以是由小到大，所以不會一開始就有這麼大的它一定是由這麼小的慢慢演化，演化到這麼大，所以這是我們說的進化論。它是這個樣子可是同學可以發現說，

就自然界來看，它的演化的方向是這樣子，但是自然界，它有物競天擇對不對所以它的food chain是什麼呢，是大魚吃小魚然後比它大的又吃它然後最大的前面都可以吃，所以它是這樣子一路吃過來，所以它是food chain。它的關係是由右往左我們，如果看這個Computer的話，Computer的Food Chain到底是長什麼樣子，是不是也是像我們自然界的Food Chain我們說Mainframe長這麼大Supercomputer也是很大然後還有所謂的Massive Repairer ProcessorMassive Repairer Processor這是什麼呢

這是早期就是說早期他們會用所謂的同一種CPU最有名的叫Connection Machine同學可以回去查一下Connection Machine就是他們用同一種簡單的CPU然後把它串成一個像Array陣列一樣的一個結構比如說就把它串成是1000x1000它每一個Row有1000個CPU然後總共有多少個Row總共有1000個Row就1000x1000這樣子這麼多個1000x1000的CPU

就是好像一個 array 一樣把它擺好之後可以做這個平行的預算那根據它的這個就是說它的運算的能力它是不是 flexible 的這個區別它的 flexibility 的差別裡面又有這個 mini supercomputer顧名思義它也是屬於 supercomputer但是功能比這個差一點然後還有 mini computer還有 workstation 還有 PC還有這個 embedded computer大概就是這樣子在1998年的時候

大概那個年代我們剛看到這麼多的這個computer它出現了什麼東西呢出現了server我們前面有沒有server 沒有後面呢 server出現了伺服器出現它可以根據不同的功能看你這個是做網路的server還是做這個file的這個server你不同的功能的application所以它就有不同的就是它的硬算特別強的能力所以它出現了這個東西你可以把它排在workstation前面可是同學可以發現說這兩個 這個是什麼意思有沒有養過魚的家裡有養魚的

舉手都沒有人養魚喔所以你們不知道這是什麼意思那個魚缸裡面的魚死掉的時候它就是這樣子肚子翻過來然後浮在魚缸的最上面它就浮在最上面這個就是魚死掉了所以mini supercomputer跟mini computer它就翻肚子然後浮到上面就掛了這兩個是被誰吃掉的呢是被Manfriend還是Supercomputer還是Massive Repair Processor都不是這兩個其實它是被這兩個吃掉它是被小魚吃掉小魚的魚群也吃掉所以它跟我們大自然的food chain不一樣

2007年左右的FoodChain我們可以看到說Cube Computer還在Massive Repair Process還在有它的定位Server PC Embedded Computer這個忘記把它勾上來所以它還浮在上面然後這是什麼Wall Station然後這是什麼MainframeMainframe的顏色好像不太對它的顏色是白色就是臉色蒼白臉色蒼白 狀況不太妙這個Wall Station它也是白色可是這邊有一條線這邊有一條線差不多45度這個魚白白的45度是什麼同學可以發現說你有觀察那個魚翻肚子浮上去的時候

它就是這樣浮上去的它是這樣慢慢慢慢這樣浮上去就表示說Wall Station快要掛了就正在掛 正在掛的當中浮到上面它就翻肚子 就飄在最上面然後這個是快要轉過來它開始飄上去之前 它在那邊掙扎這一條魚在那邊掙扎 最後就會慢慢翻過來就上去上去 就是這樣子2007年的時候是這個樣子

不過我們看到IBM它的Manfriend它有推出新的在這幾年IBM的Manfriend這邊這條魚我們應該把它塗個顏色因為越來越紅潤了它的氣色越來越好所以它做得還不錯這個最典型的我們可以看到那個SunSun大家大概不知道它以前叫森羊 台灣叫森羊Sun這個Wall Station在以前早期的時候幾乎很多的Wall Station在學校在

研究單位的Wall Station全部都是SUNSUN它的這個Founder它也是非常有名的這個反Bill Gates的一個代表性人物反正他只要抓住機會他一定會損一下Bill Gates抓住機會都會損一下結果到最後Bill Gates還沒有掛他已經先掛了他好像前幾年已經賣給Oracle已經賣給 Oracle實際上SAN它的CPU做得非常的好可惜就賣不

好所以我們前面只讓同學了解說這個computer它的evolution跟我們大自然界的food chain其實不太一樣它是一直在朝向小型化的方向發展之所以小型化的方向發展當然最主要就是因為我們的半導體的技術越來越先進你做的東西越來越小 越來越小 越來越小我們後面會給同學一個類比讓同學

知道說這個東西到底可以做到多少這邊我們就看幾張課本的圖讓同學知道一下說他的這個computer他銷售的狀況這邊同學可以看到說這個是minions of computer就是說他到底賣了多少個電腦像Desktop通常價錢是比較高的像Server價錢更高所以它的數量是最少那Embedded Computer的話因為價錢最便宜但是它數量應用也非常的多如果是就看Microprocessor同學可以看到應該有很多同學都不知道這個是叫什麼因為現在大家知道的就是Intel AMD

頂多再加一個PowerPC大家比較常知道的就是這個還有一個叫MIPS跟ARM實際上像Motorola 68,000系列其實就是Apple以前早期都是用68,000系列當CPU。 PowerPC就是IBM他們發展的. Hitachi SH SparkSpark是什麼呢Spark就是Sun它發展的。 Spark是就是我前面講的它其實算是做得很好的，它們的量大概就是這個樣子，所以ARM是最多

的同學知道現在有什麼樣的趨勢嗎？現在是一團混戰，還要過幾年之後才會知道說最後的結果會是怎麼樣。現在變化其實越來越大同學如果有注意這一方面的新聞的話就是說Google不是跟Intel結盟對不對然後之前它有一個Microsoft，它不是會提供什麼呢，它會提供ARM-based的Windows。 ARM-based的Windows，ARM以前都是應用在手持式裝置還有比如說像我們的手機或者是iPad之類

其實我們知道說像 iPad，它的CPU是Apple他們自己Design，但是它不是無中生有去Design它其實也是用ARM的IP去設計出來的，它裡面的Kernel也是ARM所以這些東西都是ARM都是用ARM去把它設計出來的，所以ARM其實它已經從就是說它已經幾乎把這種手持式裝置的市場已經大概已經主宰這個市場，但是他們現

在要做的是什麼呢他們其實要做的同學應該也有看NVIDIA/Vulkan。他們也推出他們的CPU，對不對他們的CPU，那個也是ARM，都是從ARM那邊在Basic上，在衍生設計出來，那個CPU其實就是要去打那個Desktop，就是他們要開始要把那個ARM的定位從手持式裝置開始往上往上去推就是要去Letup然後最好再加上在Desktop，所以以後的變化會越來越大所以同學會發現說微軟為什麼已經沒有那麼的忠誠，就是只是它的

作為系統就是提供Intel版本，他為什麼要提供ARM就是因為在硬體方面的變化，它們是這幾年一直在慢慢的發生以後會變成什麼樣子現在沒有人知道為什麼會有這些改變為什麼我們要知道有這些改變，這個就是我跟同學剛剛前一堂課跟同學提到的，就是說雖然說以後我可能不是做硬體

設計，我也不是做電腦系統，我也不是做嵌入式，但是同學你如果知道的越多的話其實你對整個趨勢的發展你會掌握度會更高這些其實都是包含在我剛討論的範圍之內，你如果了解這些你就會知道說為什麼現在會有所謂的SoC然後以後就是說為什麼現在會就是會發生這種什麼AP然後AP這是application，這以前早就都有了也不知道

是現在什麼時候又好像又變成是一個新名詞然後又變得又非常的火紅這樣子所以這些同學了解這些其實了解的越多是越好同學，如果想了解這些當然除了這一門課，我們第一章的簡介之外，同學如果有興趣的話，我會建議，因為你主修不是這個，你可以在大四的時候，那時候課都修得差不多跟推針也沒有什麼對推針也沒有什麼影響。 big四的時候可以去修一些跟硬體比較相關的課。你修那些課，

修完之後你大概就知道那些東西在講什麼。你又要看相關的background news，你就知道說它到底談論的是在談什麼問題。我們來看說為什麼會有這些改變呢。當然最主要就是我們的IC的機體電路，它的一直持續的進步什麼進步呢。 它是製造技術的進步還有什麼呢 設計方法的進步Design methodology的進步，就是從以前是這種Module的設計然後變成是我們現在的IP-based SOC的一個設計。還有你的這個Manufacture

有辦法進步到奈米一個NM完全是需要什麼樣的幫助呢就是需要Computer Edit Design的這個Tool也就是所謂的EDA沒有這些軟體的功能輔助幫助他們做這個的話最佳化他們不可能有辦法去生產奈米級的這種電路也不可能設計出這樣子的一個電路所以它是由這些的整合出來之後它才有可能去提高它的computation power裡面就包含說我們的

這個manufacturing technology從最早期的ECL而進展到目前的CMOS，同學都知道說現在CMOS，它實已經快要走到盡頭，有很多新的技術都準備要取代這個CMOS。最後哪一樣會成功，現在也還不是很確定，但是它的後繼的技術有很多，現在都在發展，它之所以進步就是因為它可以把future size，把一個device的寬度，比如說，你一條線的

寬度比如說你一條線的寬度可以做多寬，它可能早期可以做成像一根頭髮，它一條線做成一根頭髮，然後之後十分之一頭髮，一百分之一、 一千分之一、 一萬頭髮的寬度越做越細越做越細，它會面臨很多的問題，我們後面再跟同學大概介紹一下。你size減少就可以容納更多的電競體，所以你可以把以前整顆我們說一個系統，就是我們可以把它看成說，假設它是一個板子，就一個電腦系統，一個板子上面有很多chip

電路元件。我現在把這個板子上面的那麼多個chip跟電路元件全部都塞到一顆IC裡面，那這是什麼System on Chip，就是整個系統的硬體東西全部都塞到一顆IC裡面，甚至是什麼呢。我這一顆系統裡面的一個部分的software，因為它塞完以後還有空間，它可以塞什麼塞Memory，Memory就是要存什麼、 存Software、存資料跟Software。那

你的Software是什麼？你一旦把一些系統的一些重要的Software把它搬到裡面去以後它就是變成是它的系統裡面的一個Software所以它這種System on Chip的這個Design Mythology完全都是因為這個製程的進步它才有可能這樣子的一個發生不然它沒有辦法另外這是剛剛提到的就是你必須要有EDA、 Electrical Design Automation或者是有人稱作

Computer Edit Design它就是一些它有發展很多那種專門在解NP-Complete的那些問題的演算法對這個電路最佳化然後對製程最佳化都是演算法跟軟體然後它才有辦法設計出這些電路另外一個搭配的當然就是網路，就是網路的進步也會幫助我們在這樣子的應用上面的一個改變談到改變我們就必須要讓

同學看一個比較實際的一個圖表，這個圖表就是MOSLOW我們前面提到的MOSLOW、MOSLOW我們在看這種MOSLOW的圖表大概都會看到兩條曲線，一條是Memory，一條是CPU它這個其實就是預測從1970年到現在2011年的2011年間，它目前所擁有的最先進的技術我們看這個最先進的技術其實你大概就可以看得出來說在對照目前有哪一些新興的產業，就是新興的產業出現發生

其實都是跟這些有關係，因為我們要評估一個國家的半導體的科技就是兩項指標科技。不要說我這個手機晶片做得多厲害、多厲害什麼什麼晶片做得多厲害、多厲害那個都沒用。兩項指標科技，一個是Memory、一個是CPU juste 是這兩個。你這個國家你其他的IC設計的多棒。你沒有Memory，你沒有CPU，什麼都人家不會覺得你是半導體的強國就是這兩項重要的指標，所以我們在看這個Moss Law也都是只有看這兩個。這個是說你在這個年代你的Memory

大概已經到什麼樣，它的密度大概到什麼樣的地步。我們的密度當然就是說你的Single Die你的Memory，它的容量大概有多大這個就是牽涉到目前你的每一台電腦裡面的Memory大概它的Size規格大概是多少。所以大家可以看從早期的1K進展到現在的這個1G、4G繼續再往上跑然後CPU從以前的4044、80 88、80 86、 8088然後68020一直到目前這邊就是它的calculate rate一直到3。

5GHz然後6GHz,2011年是10GHz。實際上大家可以發現說這個越來越不準就是我們一直跟不上這個預測就是目前的現代的技術它已經跟不上這個預測就是Moslow它已經失準了為什麼會有這個Moslow失準的情況呢?其實就是因為它塞很多東西進去以後就會發生什麼情況呢?其實就好像說你這間教室有50個人跟這間教室塞了300個人大家一定會認得說塞300個人的時候你會覺得非常非常熱

塞50個人的時候就不會這個也是一樣。你塞了這麼多個電晶體是以前的10倍20倍結果它那個電晶體工作的時候要散熱散熱它會散很多熱然後那個熱大家都擠在一起所以它散不掉散不掉最後會怎麼樣可能就整個晶片就crash掉所以你不能夠設計一個工作做一做之後會crash掉的晶片所以你要設計它不會crash的話

你就是要怎麼樣 讓它的速度變慢因為那個Power是跟速度是正相關你的calculate如果越高的話它的Power就越多Power越多 熱就越多所以你要降Power 要降溫你就要把它的calculate降低所以這也就是為什麼calculate到後來都拉不上去的原因這也是為什麼後來Intel同學應該還記得說以前Intel在賣CPU的時候它都是每隔

一段時間就會推出一個calculate比較高的新的CPU然後它的價錢就會很貴然後隔一段時間那個價錢就掉下來然後再推出一個更高一點的CPU然後它價格又很貴所以它永遠都有價格很貴的CPU在賣那個就是它最賺錢的部分可是同學發現說後來Intel有沒有在強調這件事情現在有沒有應該沒有嘛? 對不对現在都沒有這個是

被誰打破的這是被AMD打破因為AMD它永遠做出Intel它永遠做出Intel所以它永遠都是賺Intel賺剩下的錢所以它一直都在虧損跟賺錢之間在那邊掙扎有時候賺一點有時候虧有時候賺有時候虧因為他是賺賺人家剩下的所以AMD他後來就發現說他不要這樣再跟他玩了而且的確你

要把clock rate一直往上拉很難拉得上去就是拉不上去就是我們剛剛講的那個散熱的問題他拉不上去所以你要拉上去你要就是要很高的這個成本所以AMD他就他才想去做Maticor所以Maticor最早是AMD他們推出來的推出來之後就賣得很好所以那時候Intel才發現說Maticor好像是應該要走這一條路所以Intel因為畢竟他是老大所以他什麼技術都很好所以他就馬上回過頭來就馬上很快時間就推出Maticor可是

Intel其實當時最早推出Matic Code的時候它那個Matic Code是假的為什麼說Intel當時趕快推出那個Matic Code是假的就是說那個Matic Code你也不能說它是假的就是說其實它是比較不好的一種Matic Code的架構因為我們說Matic Code是什麼呢我們一般的認知是說我們說這個CPU一顆Chip裡面我們有四個Code然後最外面這個是什麼呢最外面這個是包裝Package這個是Package Package的Delay是遠大於你裡面的帶它的DelayIntel當初

因為AMD它推出來之後它要回過頭去跟人家搶這個馬蹄扣所以你要把所有的東西你要把比如說Dual Code兩個扣塞到同一個帶上面是有那個困難度塞不進去所以當初最早期的Intel的Dual Code它是用兩個帶用包裝的技術把它包起來讓你看不出來說它是兩個帶一般AMD它是一個帶帶是這樣子的寫法

帶通常我們都是包裝 把一個帶包起來這個是稱作一顆chipIntel它的封裝技術很強所以它可以把兩個帶透過封裝技術把它包在一起讓你覺得說這個好像是一個帶實際上它的效能這樣會比較差不過那是最早期的時候是這樣所以Intel它很快就catch up上來就可以做成像AMD那樣子的一個技術所以這個是同學可以回去自己看一下它的performance還有這最早期的真空管到目前它們之間的差異度是差這麼的多

以前每次提到這個都要跟同學再提一下這個Memory因為我們說這個Memory跟CPU是半導體兩大指標的科技我們都知道說CPU這個指標的科技強國是哪個國家我們都知道說是美國Memory同學會說哪一國Memory同學認為指標強國的是哪一國我們投個票好了認為是日本的舉手，大家舉一下手沒有認為是韓國的舉手也沒有有一票台灣有沒有没有美國呢有一票其他是什麼？ 還是

還有其他國家嗎？ 中國大陸或者是什麼？ 沒有 他們還没有目前的強國是韓国， 是南韓目前的強國是南韓其實最早期的時候 記憶體的強國是誰是日本 最強的是日本為什麼最強的是日本呢， 因為在早期因為記憶體跟什麼有關係呢，跟半導體製造的技術有關係半導體製造技術因為記憶體是

強調你要在一個單位面積你要塞很高很高的密度原件的密度你要把它塞進去所以它跟製造技術有非常高的關係日本它以前是製造技術的強國所以它當然也是記憶體的強國可是後來被這個南韓給取代掉南韓取代掉也是有這個故事的就是有一個他們之間日本跟南韓之間的恩怨情仇的故事剛刚是下課中是不是那我們下次再跟同學介紹好了.